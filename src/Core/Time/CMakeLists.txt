get_filename_component(CURRENT_SOURCE_DIR_NAME ${CMAKE_CURRENT_SOURCE_DIR} NAME)
set(CURRENT_SCOPE "${CURRENT_SCOPE}${CURRENT_SOURCE_DIR_NAME}")

file(GLOB entries "*")
foreach(entry IN LISTS entries)
	if (IS_DIRECTORY ${entry})
		add_subdirectory(${entry})
	endif()
endforeach()

file(GLOB SOURCES *.cpp)
add_library(${CURRENT_SCOPE} STATIC ${SOURCES})

if (EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/dependencies.cmake)
	include(dependencies.cmake)
	if (DEFINED dependencies)
		foreach(dependence IN LISTS dependencies)
			find_package(${dependence} REQUIRED)
			if (${${dependence}_FOUND})
				target_link_libraries(${CURRENT_SCOPE} PUBLIC ${${dependence}_LIBRARIES})
				include_directories(${${dependence}_INCLUDE_DIRS})
			else()
				message(FATAL_ERROR "Cannot find ${dependence} package, dependence of ${CMAKE_CURRENT_SOURCE_DIR} source directory")
				return()
			endif()
		endforeach()
	else()
		message(WARNING "The directory \"${CMAKE_CURRENT_SOURCE_DIR}\" have a dependencies.cmake file but the content is invalid, cannot find the variable named \"dependencies\"")
	endif()
endif()

foreach(entry IN LISTS entries)
	if (IS_DIRECTORY ${entry})
		get_filename_component(dir ${entry} NAME)
		target_link_libraries(${CURRENT_SCOPE} ${CURRENT_SCOPE}${dir})
	endif()
endforeach()